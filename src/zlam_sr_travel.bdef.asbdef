managed ;
//guideline and best practice for definition to be followed
strict ( 2 );
//1. add draft feature at BO level
with draft;
//define the behavior for root entity
define behavior for ZLAM_SR_TRAVEL alias Travel
//adding class to travel level
implementation in class zbp_lam_sr_travel unique
//telling the framework to insert data in this db table for travel request
persistent table /dmo/travel_m
//how the RAP should handle the locks - if a travel request is locked
//the other users cannot edit the childs - like its bookings and suppl
lock master
//2. mandatory to use total etag
total etag LastChangedAt
//controls the permissions and security settings for our RAP BO
authorization master ( instance )
//3. specify the draft table - will created by the rap framework
draft table zlamsr_d_travel
//controlling the concurrency
etag master LastChangedAt
early numbering
{
  //field control - static field control (user can only read data, cannot enter new value)
  field ( readonly ) TravelId;
  field (mandatory) AgencyId, BeginDate, EndDate, CustomerId;
  //here are the operations which RAP with generate automatically (manage)
  create (precheck);
  update (precheck);
  delete;
  //a booking can only be created with travel request
  //4. add draft
  association _Booking { create (features : instance); with draft; }
  factory action copyTravel[1];

  action (features : instance) acceptTravel result[1] $self;
  action (features : instance) rejectTravel result[1] $self;

  //Checking custom business object rules
  validation validateHeaderData on save {create;
    field CustomerId, BeginDate, EndDate;}

  //5. adding the draft actions
  draft determine action Prepare;
  draft action Edit;
  draft action Resume;
  draft action Activate;
  draft action Discard;

  //its a piece of code which is intented to be only
  //consumed within our RAP BO
  internal action reCalcTotalPrice;

  //Define determination to execute the code when
  //booking fee or curr code changes so we calc total price
  determination calculateTotalPrice on modify
            { create; field BookingFee, CurrencyCode; }

  side effects {
    field BookingFee affects field TotalPrice;
  }

  mapping for /dmo/travel_m{
    TravelId = travel_id;
    AgencyId = agency_id;
    CustomerId = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    TotalPrice = total_price;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    Description = description;
    OverallStatus = overall_status;
    CreatedBy = created_by;
    LastChangedBy = last_changed_by;
    CreatedAt = created_at;
    LastChangedAt = last_changed_at;
  }
}

//define the behavior for child entity
define behavior for ZLAM_SR_BOOKING alias Booking
//adding class to booking level
implementation in class zbp_lam_sr_booking unique
//telling the framework to insert data in this db table for booking
persistent table /dmo/booking_m
draft table zlamsr_d_book
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId;
  field (mandatory) CarrierId, ConnectionId, FlightDate;
  association _Travel;
  association _BookingSupplement { create; with draft;}

  //add a determination for the change in the booking also
  //TODO: Why the booking code is not triggering
  determination calculateTotalPrice on modify
            { field FlightPrice, CurrencyCode; }

  side effects {
    field FlightPrice affects field _Travel.TotalPrice;
  }

  mapping for /dmo/booking_m{
    TravelId = travel_id;
    BookingId = booking_id;
    BookingDate = booking_date;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
    BookingStatus = booking_status;
    LastChangedAt = last_changed_at;
  }

}

//define the behavior for child entity
define behavior for ZLAM_SR_BOOKSUPPL alias BookingSuppl
//telling the framework to insert data in this db table for booking suppl
persistent table /dmo/booksuppl_m
draft table zlamsr_d_booksp
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) BookingId, TravelId, BookingSupplementId;
  field (mandatory) SupplementId;

  association _Travel;
  association _Booking;

  mapping for /dmo/booksuppl_m{
    TravelId = travel_id;
    BookingId = booking_id;
    BookingSupplementId = booking_supplement_id;
    SupplementId = supplement_id;
    Price = price;
    CurrencyCode = currency_code;
    LastChangedAt = last_changed_at;
  }
}